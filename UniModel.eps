%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: C:\Users\Lenovo\Desktop\Figure 2 Univariate Model of AR.eps
%%CreationDate: 10/25/2018  16:53:17
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -110   190   450   620
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -269   160   882   631
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -3228 7572 csm

    0     0 13822  5643 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 13823 5644 rf
6 w
0 4527 6023 0 0 -4527 2427 4887 4 MP
PP
-6023 0 0 4527 6023 0 0 -4527 2427 4887 5 MP stroke
4 w
DO
0 sg
2427 4887 mt 2427  360 L
2427  360 mt 2427  360 L
3287 4887 mt 3287  360 L
3287  360 mt 3287  360 L
4147 4887 mt 4147  360 L
4147  360 mt 4147  360 L
5008 4887 mt 5008  360 L
5008  360 mt 5008  360 L
5868 4887 mt 5868  360 L
5868  360 mt 5868  360 L
6729 4887 mt 6729  360 L
6729  360 mt 6729  360 L
7589 4887 mt 7589  360 L
7589  360 mt 7589  360 L
8450 4887 mt 8450  360 L
8450  360 mt 8450  360 L
2427 4887 mt 8450 4887 L
8450 4887 mt 8450 4887 L
2427 4434 mt 8450 4434 L
8450 4434 mt 8450 4434 L
2427 3981 mt 8450 3981 L
8450 3981 mt 8450 3981 L
2427 3528 mt 8450 3528 L
8450 3528 mt 8450 3528 L
2427 3076 mt 8450 3076 L
8450 3076 mt 8450 3076 L
2427 2623 mt 8450 2623 L
8450 2623 mt 8450 2623 L
2427 2170 mt 8450 2170 L
8450 2170 mt 8450 2170 L
2427 1718 mt 8450 1718 L
8450 1718 mt 8450 1718 L
2427 1265 mt 8450 1265 L
8450 1265 mt 8450 1265 L
2427  812 mt 8450  812 L
8450  812 mt 8450  812 L
2427  360 mt 8450  360 L
8450  360 mt 8450  360 L
SO
6 w
2427  360 mt 8450  360 L
2427 4887 mt 8450 4887 L
8450 4887 mt 8450  360 L
2427 4887 mt 2427  360 L
2427 4887 mt 8450 4887 L
2427 4887 mt 2427  360 L
2427 4887 mt 2427 4826 L
2427  360 mt 2427  420 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2394 5032 mt 
(0) s
3287 4887 mt 3287 4826 L
3287  360 mt 3287  420 L
3254 5032 mt 
(1) s
4147 4887 mt 4147 4826 L
4147  360 mt 4147  420 L
4114 5032 mt 
(2) s
5008 4887 mt 5008 4826 L
5008  360 mt 5008  420 L
4975 5032 mt 
(3) s
5868 4887 mt 5868 4826 L
5868  360 mt 5868  420 L
5835 5032 mt 
(4) s
6729 4887 mt 6729 4826 L
6729  360 mt 6729  420 L
6696 5032 mt 
(5) s
7589 4887 mt 7589 4826 L
7589  360 mt 7589  420 L
7556 5032 mt 
(6) s
8450 4887 mt 8450 4826 L
8450  360 mt 8450  420 L
8417 5032 mt 
(7) s
2427 4887 mt 2487 4887 L
8450 4887 mt 8389 4887 L
2326 4931 mt 
(0) s
2427 4434 mt 2487 4434 L
8450 4434 mt 8389 4434 L
2226 4478 mt 
(0.1) s
2427 3981 mt 2487 3981 L
8450 3981 mt 8389 3981 L
2226 4025 mt 
(0.2) s
2427 3528 mt 2487 3528 L
8450 3528 mt 8389 3528 L
2226 3572 mt 
(0.3) s
2427 3076 mt 2487 3076 L
8450 3076 mt 8389 3076 L
2226 3120 mt 
(0.4) s
2427 2623 mt 2487 2623 L
8450 2623 mt 8389 2623 L
2226 2667 mt 
(0.5) s
2427 2170 mt 2487 2170 L
8450 2170 mt 8389 2170 L
2226 2214 mt 
(0.6) s
2427 1718 mt 2487 1718 L
8450 1718 mt 8389 1718 L
2226 1762 mt 
(0.7) s
2427 1265 mt 2487 1265 L
8450 1265 mt 8389 1265 L
2226 1309 mt 
(0.8) s
2427  812 mt 2487  812 L
8450  812 mt 8389  812 L
2226  856 mt 
(0.9) s
2427  360 mt 2487  360 L
8450  360 mt 8389  360 L
2326  404 mt 
(1) s
2427  360 mt 8450  360 L
2427 4887 mt 8450 4887 L
8450 4887 mt 8450  360 L
2427 4887 mt 2427  360 L
gs 2427 360 6024 4528 rc
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
9 5 8 4 9 5 8 4 9 5 9 4 8 5 9 5 
8 4 9 5 9 4 8 5 9 4 8 5 9 4 9 5 
8 4 9 5 8 4 9 5 9 4 8 5 9 4 8 5 
9 4 9 5 8 5 9 4 8 5 9 4 9 5 8 4 
9 5 8 4 9 5 9 4 8 5 9 4 8 5 9 4 
9 5 8 4 9 5 9 4 8 5 9 5 8 4 9 5 
9 4 8 5 9 4 8 5 9 4 9 5 8 4 9 5 
8 4 9 5 9 4 8 5 9 4 8 5 9 5 9 4 
8 5 9 4 8 5 9 4 9 5 8 4 9 5 8 4 
9 5 9 4 8 5 9 4 8 5 9 4 9 5 8 4 
9 5 8 5 9 4 9 5 8 4 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 8 4 9 5 
9 4 8 5 9 4 8 5 9 5 9 4 8 5 9 4 
8 5 9 4 9 5 8 4 9 5 8 4 9 5 9 4 
8 5 9 4 8 5 9 4 9 5 8 4 9 5 8 5 
9 4 9 5 8 4 9 5 8 4 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 9 4 8 5 
9 4 8 5 9 5 9 4 8 5 9 4 8 5 9 4 
9 5 8 4 9 5 8 4 9 5 9 4 8 5 9 4 
8 5 9 4 9 5 8 5 9 4 8 5 9 4 9 5 
8 4 9 5 8 4 9 5 9 4 8 5 9 4 8 5 
9 4 9 5 8 4 9 5 8 4 9 5 9 5 8 4 
9 5 8 4 9 5 9 4 8 5 9 4 9 5 8 4 
9 5 8 4 9 5 9 4 8 5 9 4 8 5 9 4 
9 5 8 5 9 4 8 5 9 4 9 5 8 4 9 5 
8 4 9 5 9 4 8 5 9 4 8 5 9 4 9 5 
8 4 9 5 8 4 9 5 9 5 8 4 9 5 8 4 
9 5 9 4 8 5 9 4 8 5 9 4 9 5 8 4 
9 5 8 4 9 5 9 4 8 5 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 8 4 9 5 
9 4 8 5 9 4 8 5 9 4 9 5 8 4 9 5 
8 5 9 4 9 5 8 4 9 5 8 4 9 5 9 4 
8 5 9 4 8 5 9 4 9 5 8 4 9 5 8 4 
9 5 9 4 8 5 9 5 8 4 9 5 9 4 8 5 
9 4 9 5 8 4 9 5 8 4 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 8 5 9 4 
9 5 8 4 9 5 8 4 9 5 9 4 8 5 9 4 
8 5 9 4 9 5 5016 1722 300 MP stroke
8 4 9 5 8 4 9 5 9 5 8 4 9 5 8 4 
9 5 9 4 8 5 9 4 8 5 9 4 9 5 8 4 
9 5 8 4 9 5 9 4 8 5 9 4 9 5 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 8 4 9 5 
9 4 8 5 9 4 8 5 9 4 9 5 8 4 9 5 
8 4 9 5 9 5 8 4 9 5 8 4 9 5 9 4 
8 5 9 4 8 5 9 4 9 5 8 4 9 5 8 4 
9 5 9 4 8 5 9 4 8 5 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 4 9 5 8 5 9 4 
9 5 8 4 9 5 8 4 9 5 9 4 8 5 9 4 
8 5 9 4 9 5 8 4 9 5 8 4 9 5 9 4 
8 5 9 5 8 4 9 5 9 4 8 5 9 4 8 5 
9 4 9 5 8 4 9 5 8 4 9 5 9 4 8 5 
9 4 8 5 9 4 9 5 8 5 9 4 9 5 8 4 
9 5 8 4 9 5 9 4 8 5 9 4 8 5 9 4 
9 5 8 4 9 5 8 4 9 5 9 4 8 5 9 5 
8 4 9 5 9 4 8 5 9 4 8 5 9 4 9 5 
8 4 9 5 8 4 9 5 9 4 8 5 9 4 8 5 
9 5 9 4 8 5 9 4 8 5 9 4 9 5 8 4 
9 5 9 4 8 5 9 4 8 5 9 4 9 5 8 4 
9 5 8 4 9 5 9 5 8 4 9 5 8 4 9 5 
9 4 8 5 9 4 8 5 9 4 9 5 8 4 9 5 
8 4 9 5 9 4 8 5 9 4 8 5 9 5 9 4 
8 5 9 4 8 5 9 4 9 5 8 4 9 5 8 4 
9 5 3287 812 202 MP stroke
DA
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
9 1 8 2 9 1 8 1 9 2 9 1 8 2 9 1 
8 1 9 2 9 1 8 2 9 1 8 1 9 2 9 1 
8 2 9 1 8 2 9 1 9 1 8 2 9 1 8 2 
9 1 9 2 8 1 9 2 8 1 9 2 9 1 8 1 
9 2 8 1 9 2 9 1 8 2 9 1 8 2 9 1 
9 2 8 1 9 2 9 1 8 2 9 2 8 1 9 2 
9 1 8 2 9 1 8 2 9 1 9 2 8 2 9 1 
8 2 9 1 9 2 8 1 9 2 8 2 9 1 9 2 
8 1 9 2 8 2 9 1 9 2 8 2 9 1 8 2 
9 1 9 2 8 2 9 1 8 2 9 2 9 1 8 2 
9 2 8 2 9 1 9 2 8 2 9 1 9 2 8 2 
9 1 8 2 9 2 9 2 8 1 9 2 8 2 9 2 
9 1 8 2 9 2 8 2 9 2 9 1 8 2 9 2 
8 2 9 2 9 1 8 2 9 2 8 2 9 2 9 2 
8 1 9 2 8 2 9 2 9 2 8 2 9 2 8 1 
9 2 9 2 8 2 9 2 8 2 9 2 9 2 8 2 
9 2 8 2 9 2 9 2 8 1 9 2 9 2 8 2 
9 2 8 2 9 2 9 2 8 2 9 2 8 2 9 2 
9 3 8 2 9 2 8 2 9 2 9 2 8 2 9 2 
8 2 9 2 9 2 8 2 9 3 8 2 9 2 9 2 
8 2 9 2 8 2 9 3 9 2 8 2 9 2 8 2 
9 3 9 2 8 2 9 2 8 2 9 3 9 2 8 2 
9 2 8 3 9 2 9 2 8 3 9 2 9 2 8 3 
9 2 8 2 9 3 9 2 8 2 9 3 8 2 9 2 
9 3 8 2 9 3 8 2 9 2 9 3 8 2 9 3 
8 2 9 3 9 2 8 3 9 2 8 3 9 2 9 3 
8 2 9 3 8 2 9 3 9 3 8 2 9 3 8 2 
9 3 9 3 8 2 9 3 8 3 9 2 9 3 8 3 
9 2 8 3 9 3 9 2 8 3 9 3 9 3 8 3 
9 2 8 3 9 3 9 3 8 3 9 2 8 3 9 3 
9 3 8 3 9 3 8 3 9 3 9 3 8 2 9 3 
8 3 9 3 9 3 8 3 9 3 8 3 9 3 9 4 
8 3 9 3 8 3 9 3 9 3 8 3 9 3 8 3 
9 4 9 3 8 3 9 3 8 4 9 3 9 3 8 3 
9 4 9 3 8 3 9 4 8 3 9 3 9 4 8 3 
9 3 8 4 9 3 9 4 8 3 9 4 8 3 9 4 
9 3 8 4 9 4 8 3 9 4 9 3 8 4 9 4 
8 3 9 4 9 4 5016 2413 300 MP stroke
8 3 9 4 8 4 9 4 9 4 8 3 9 4 8 4 
9 4 9 4 8 4 9 4 8 4 9 4 9 4 8 4 
9 4 8 4 9 4 9 4 8 4 9 4 9 4 8 5 
9 4 8 4 9 4 9 5 8 4 9 4 8 5 9 4 
9 4 8 5 9 4 8 5 9 4 9 5 8 4 9 5 
8 4 9 5 9 5 8 4 9 5 8 5 9 4 9 5 
8 5 9 5 8 5 9 5 9 5 8 4 9 5 8 5 
9 5 9 6 8 5 9 5 8 5 9 5 9 5 8 6 
9 5 8 5 9 6 9 5 8 5 9 6 9 5 8 6 
9 5 8 6 9 6 9 5 8 6 9 6 8 5 9 6 
9 6 8 6 9 6 8 6 9 6 9 6 8 6 9 6 
8 6 9 7 9 6 8 6 9 6 8 7 9 6 9 7 
8 6 9 7 8 6 9 7 9 7 8 7 9 6 8 7 
9 7 9 7 8 7 9 7 8 7 9 8 9 7 8 7 
9 7 8 8 9 7 9 8 8 7 9 8 9 8 8 8 
9 7 8 8 9 8 9 8 8 8 9 8 8 9 9 8 
9 8 8 9 9 8 8 9 9 8 9 9 8 9 9 9 
8 9 9 9 9 9 8 9 9 9 8 10 9 9 9 10 
8 9 9 10 8 10 9 10 9 10 8 10 9 10 8 10 
9 11 9 10 8 11 9 11 8 10 9 11 9 11 8 12 
9 11 9 11 8 12 9 11 8 12 9 12 9 12 8 12 
9 12 8 13 9 12 9 13 8 13 9 13 8 13 9 13 
9 14 8 13 9 14 8 14 9 14 9 14 8 14 9 15 
8 15 9 15 9 15 8 15 9 16 8 16 9 16 9 16 
8 16 9 17 8 17 9 17 9 17 8 18 9 17 8 18 
9 19 3287 812 202 MP stroke
gr

c9
DA
0 sg
4884 5175 mt 
(Moving distance\(km\)) s
2144 3150 mt  -90 rotate
(Acceptance rate\(%\)) s
90 rotate
2410 4930 mt 
( ) s
8434  402 mt 
( ) s
SO
1 sg
0 501 3655 0 0 -501 3706 4713 4 MP
PP
-3655 0 0 501 3655 0 0 -501 3706 4713 5 MP stroke
4 w
DO
SO
6 w
3706 4212 mt 7361 4212 L
3706 4713 mt 7361 4713 L
7361 4713 mt 7361 4212 L
3706 4713 mt 3706 4212 L
3706 4713 mt 7361 4713 L
3706 4713 mt 3706 4212 L
3706 4212 mt 7361 4212 L
3706 4713 mt 7361 4713 L
7361 4713 mt 7361 4212 L
3706 4713 mt 3706 4212 L
0 sg
4486 4498 mt 
(Linear model) s
gs 3706 4212 3656 502 rc
c8
600 0 3826 4455 2 MP stroke
gr

c8
0 sg
6387 4498 mt 
(Zipf model) s
gs 3706 4212 3656 502 rc
DA
c9
600 0 5726 4455 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
